1.1 컬렉션 프레임웍의 핵심 인터페이스

컬렉션 프레임웍에서는 컬렉션을 크게 3가지 타입이 존재한다고 인식하고
각 컬렉션을 다루는데 필요한 기능을 가진 3개의 인터페이스를 정의하였다

그리고 인터페이스 List 와 Set 의 공통된 부분을 다시 뽑아서 새로운
인터페이스인 Collection 을 추가로 정의하였다

인터페이스           특징
List        순서가 있는 데이터의 집합. 중복 허용
                        구현 클래스 : ArrayList, LinkedList, Stack, Vector 등

Set         순서를 유지하지 않는 데이터의 집합. 중복을 허용하지 않는다
                        구현 클래스 : HashSet, TreeSet

Map         키(key) 와  값(value) 의 쌍(pair) 으로 이루어진 데이터의 집합
                        순서는 유지되지 않으며, 키는 중복을 허용하지 않고, 값은 중복을 허용
                        구현 클래스 : HashMap, TreeMap, Hashtable, Properties        

-> Vector, Stack, Hashtable 와 같은 클래스들은 컬렉션 프레임웍이 만들어지기 이전부터
존재하던 것이기 때문에 컬렉션 프레임웍의 명명법을 따르지 않는다
... 가능하면 사용하지 않는 것이 좋다 


1.2 ArrayList

기존의 Vector 를 개선한 것으로 구현원리와 기능적인 측면에서 동일하다고 할 수 있다
기존에 작성된 소스와의 호환성을 위해서 계속 남겨 두고 있을 뿐이기 때문에
가능하면 Vector 보다는 ArrayList 를 사용하자


